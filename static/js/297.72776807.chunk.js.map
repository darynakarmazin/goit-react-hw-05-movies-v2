{"version":3,"file":"static/js/297.72776807.chunk.js","mappings":"sIACO,SAASA,EAAYC,GAU1B,OAAOC,MAAMD,EATG,CACdE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAIqBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACpC,C,8NCTYC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mFAMRE,EAAeF,EAAAA,GAAAA,GAAH,0KAUZG,EAAaH,EAAAA,GAAAA,GAAH,6CAIVI,EAAcJ,EAAAA,GAAAA,IAAH,yKAQXK,EAAeL,EAAAA,GAAAA,EAAH,4J,yIC7BZM,EAAkBN,EAAAA,GAAAA,IAAH,0RAefO,EAAaP,EAAAA,GAAAA,KAAH,ssC,SCdhB,SAASQ,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,gBAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,SAACN,EAAD,WACE,UAACC,EAAD,CAAYM,SAZK,SAAAC,GACnBA,EAAEC,iBAEFN,EAAgB,CAAEE,MAAAA,GACnB,EAQuCK,UAAU,OAA9C,WACE,mBAAQC,KAAK,SAASD,UAAU,SAAhC,UACE,iBAAMA,UAAU,eAAhB,SAA+B,oBAGjC,kBACEE,SAZkB,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACrCP,EAASO,EACV,EAWOA,MAAOR,EACPK,UAAU,QACVC,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,sBAKrB,C,aCoBD,MA3CA,WACE,OAA4Bb,EAAAA,EAAAA,UAAS,IAArC,eAAOc,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBlB,EAArB,KAEMmB,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAW,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GAC3C1C,EAAG,0DAAsDyC,EAAtD,+CACT1C,EAAAA,EAAAA,GAAYC,GACTM,MAAK,SAAAqC,GACJR,EAAUQ,EACX,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAA7B,GACb,GAAE,CAACR,KAGF,iCACE,SAACnB,EAAD,CAAWC,gBAAiBA,IAC3Be,IACC,SAAC,KAAD,UACGA,EAAOS,QAAQK,KAAI,SAAAC,GAClB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAUC,GAAE,UAAKD,EAAOE,IAAMC,MAAO,CAAEC,KAAMf,GAA7C,WACE,SAAC,KAAD,CACEgB,MAAM,QACNC,OAAO,QACPC,IAAG,8CAAyCP,EAAOQ,aACnDC,IAAKT,EAAOU,SAEd,SAAC,KAAD,UAAeV,EAAOW,kBACtB,yBAAG,gBAAcC,KAAKC,MAA4B,GAAtBb,EAAOc,cAAmB,WATzCd,EAAOE,GAa3B,QAKV,C","sources":["Api/fetchMovies.jsx","components/HomeTrendingList/HomeTrendingList.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["\nexport function fetchMovies(url) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDhlY2Y3NDVmNWJiZTUwZmM2NDhjMDg1OWZhMTcwMSIsInN1YiI6IjY0ODhjMTU2ZDJiMjA5MDBjYTIxNzA5NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4vxGV4kBszJbv90PYcnQ1DUyBmnKxmAR_P1khjcXgUk',\n    },\n  };\n\n  return fetch(url, options).then(res => res.json());\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const HomeItem = styled(NavLink)`\n  color: #e6e6e6;\n  margin: 0;\n  text-decoration: none;\n`;\n\nexport const TrendingList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  column-gap: 16px;\n  row-gap: 32px;\n  list-style: none;\n  flex-bacis: 24%;\n`;\n\nexport const TrendingLi = styled.li`\n  max-width: 264px;\n`;\n\nexport const TrendingImg = styled.img`\n  border-radius: 5px;\n  background: var(\n    --linear,\n    linear-gradient(180deg, rgba(0, 0, 0, 0) 63.48%, rgba(0, 0, 0, 0.9) 92.16%)\n  );\n`;\n\nexport const TrendingName = styled.p`\n  color: #e6e6e6;\n  font-size: 16px;\n  font-weight: 600;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n","import styled from 'styled-components';\n\nexport const SearchbarHeader = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding: 12 24px;\n  z-index: 10;\n  margin: 0 auto;\n  background-color: #0a0909;\n  border-bottom: 1px solid #ffffff;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  overflow: hidden;\n  border-radius: 8px;\n  border: 1px solid #fff;\n\n  button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-size: 40%;\n    background: var(\n      --linear,\n      linear-gradient(145deg, #ffc226 0%, #f84119 100%)\n    );\n    background-repeat: no-repeat;\n    background-position: center;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n\n  button:hover {\n    opacity: 1;\n  }\n\n  span {\n    font-size: 30px;\n  }\n\n  button-label {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n\n  input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 20px;\n    padding-right: 4px;\n    background: transparent;\n    color: #ffffff;\n  }\n\n  input::placeholder {\n    font: inherit;\n    font-size: 18px;\n    color: #ffffff;\n  }\n`;\n","import React, { useState } from 'react';\nimport { SearchbarHeader, SearchForm } from './Searchbar.styled';\n\nexport function Searchbar({ setSearchParams }) {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleQueryChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <SearchbarHeader>\n      <SearchForm onSubmit={handleSubmit} className=\"form\">\n        <button type=\"submit\" className=\"button\">\n          <span className=\"button-label\">&#128269;</span>\n        </button>\n\n        <input\n          onChange={handleQueryChange}\n          value={query}\n          className=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search Movies\"\n        />\n      </SearchForm>\n    </SearchbarHeader>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovies } from '../../Api/fetchMovies';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport {\n  HomeItem,\n  TrendingImg,\n  TrendingLi,\n  TrendingList,\n  TrendingName,\n} from 'components/HomeTrendingList/HomeTrendingList.styled';\n\nfunction Movies() {\n  const [movies, setMovies] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query') ?? '';\n    const url = `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=1`;\n    fetchMovies(url)\n      .then(results => {\n        setMovies(results);\n      })\n      .catch(err => console.error('error:' + err));\n  }, [searchParams]);\n\n  return (\n    <>\n      <Searchbar setSearchParams={setSearchParams} />\n      {movies && (\n        <TrendingList>\n          {movies.results.map(result => {\n            return (\n              <TrendingLi key={result.id}>\n                <HomeItem to={`${result.id}`} state={{ from: location }}>\n                  <TrendingImg\n                    width=\"264px\"\n                    height=\"384px\"\n                    src={`https://image.tmdb.org/t/p/original/${result.poster_path}`}\n                    alt={result.title}\n                  />\n                  <TrendingName>{result.original_title}</TrendingName>\n                  <p>User Scrore: {Math.round(result.vote_average * 10)}%</p>\n                </HomeItem>\n              </TrendingLi>\n            );\n          })}\n        </TrendingList>\n      )}\n    </>\n  );\n}\n\nexport default Movies;\n"],"names":["fetchMovies","url","fetch","method","headers","accept","Authorization","then","res","json","HomeItem","styled","NavLink","TrendingList","TrendingLi","TrendingImg","TrendingName","SearchbarHeader","SearchForm","Searchbar","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","className","type","onChange","value","target","autoComplete","autoFocus","placeholder","movies","setMovies","useSearchParams","searchParams","location","useLocation","useEffect","searchQuery","get","results","catch","err","console","error","map","result","to","id","state","from","width","height","src","poster_path","alt","title","original_title","Math","round","vote_average"],"sourceRoot":""}